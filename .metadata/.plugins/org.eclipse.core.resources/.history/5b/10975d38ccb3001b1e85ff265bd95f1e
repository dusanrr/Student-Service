package dusan.rajkovic.mapper;

import javax.annotation.Generated;

import student.service.dto.CityDto;
import student.service.dto.StudentDto;
import student.service.entity.CityEntity;
import student.service.entity.StudentEntity;
import student.service.mapper.StudentMapper;

@Generated(
    value = "org.mapstruct.ap.MappingProcessor",
    comments = "version: 1.4.2.Final, compiler: Eclipse JDT (IDE) 3.24.0.v20201123-0742, environment: Java 15.0.1 (Oracle Corporation)"
)
public class StudentMapperImpl implements StudentMapper {

    @Override
    public StudentDto toStudentDto(StudentEntity student) {
        if ( student == null ) {
            return null;
        }

        StudentDto studentDto = new StudentDto();

        studentDto.setCityDto( cityEntityToCityDto( student.getCity() ) );
        studentDto.setIndexNumber( student.getIndexNumber() );
        studentDto.setIndexYear( student.getIndexYear() );
        studentDto.setFirstName( student.getFirstName() );
        studentDto.setLastName( student.getLastName() );
        studentDto.setEmail( student.getEmail() );
        studentDto.setAdress( student.getAdress() );
        studentDto.setCurrentYearOfStudy( student.getCurrentYearOfStudy() );

        return studentDto;
    }

    @Override
    public StudentEntity toStudent(StudentDto studentDto) {
        if ( studentDto == null ) {
            return null;
        }

        StudentEntity studentEntity = new StudentEntity();

        studentEntity.setCity( cityDtoToCityEntity( studentDto.getCityDto() ) );
        studentEntity.setIndexNumber( studentDto.getIndexNumber() );
        studentEntity.setIndexYear( studentDto.getIndexYear() );
        studentEntity.setFirstName( studentDto.getFirstName() );
        studentEntity.setLastName( studentDto.getLastName() );
        studentEntity.setEmail( studentDto.getEmail() );
        studentEntity.setAdress( studentDto.getAdress() );
        studentEntity.setCurrentYearOfStudy( studentDto.getCurrentYearOfStudy() );

        return studentEntity;
    }

    protected CityDto cityEntityToCityDto(CityEntity cityEntity) {
        if ( cityEntity == null ) {
            return null;
        }

        CityDto cityDto = new CityDto();

        cityDto.setNumber( cityEntity.getNumber() );
        cityDto.setName( cityEntity.getName() );

        return cityDto;
    }

    protected CityEntity cityDtoToCityEntity(CityDto cityDto) {
        if ( cityDto == null ) {
            return null;
        }

        CityEntity cityEntity = new CityEntity();

        cityEntity.setNumber( cityDto.getNumber() );
        cityEntity.setName( cityDto.getName() );

        return cityEntity;
    }
}
