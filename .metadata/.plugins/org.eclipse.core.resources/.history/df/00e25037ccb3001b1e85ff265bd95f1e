package dusan.rajkovic.mapper;

import dusan.rajkovic.dto.CityDto;
import dusan.rajkovic.dto.ProfessorDto;
import dusan.rajkovic.dto.TitleDto;
import dusan.rajkovic.entity.CityEntity;
import dusan.rajkovic.entity.ProfessorEntity;
import dusan.rajkovic.entity.TitleEntity;
import javax.annotation.Generated;

@Generated(
    value = "org.mapstruct.ap.MappingProcessor",
    comments = "version: 1.4.2.Final, compiler: Eclipse JDT (IDE) 3.24.0.v20201123-0742, environment: Java 15.0.1 (Oracle Corporation)"
)
public class ProfessorMapperImpl implements ProfessorMapper {

    @Override
    public ProfessorDto toProfessorDto(ProfessorEntity professor) {
        if ( professor == null ) {
            return null;
        }

        ProfessorDto professorDto = new ProfessorDto();

        professorDto.setCityDto( cityEntityToCityDto( professor.getCity() ) );
        professorDto.setTitleDto( titleEntityToTitleDto( professor.getTitle() ) );
        professorDto.setId( professor.getId() );
        professorDto.setFirstName( professor.getFirstName() );
        professorDto.setLastName( professor.getLastName() );
        professorDto.setEmail( professor.getEmail() );
        professorDto.setAdress( professor.getAdress() );
        professorDto.setPhone( professor.getPhone() );
        professorDto.setReelectionDate( professor.getReelectionDate() );

        return professorDto;
    }

    @Override
    public ProfessorEntity toProfessor(ProfessorDto professorDto) {
        if ( professorDto == null ) {
            return null;
        }

        ProfessorEntity professorEntity = new ProfessorEntity();

        professorEntity.setCity( cityDtoToCityEntity( professorDto.getCityDto() ) );
        professorEntity.setTitle( titleDtoToTitleEntity( professorDto.getTitleDto() ) );
        professorEntity.setId( professorDto.getId() );
        professorEntity.setFirstName( professorDto.getFirstName() );
        professorEntity.setLastName( professorDto.getLastName() );
        professorEntity.setEmail( professorDto.getEmail() );
        professorEntity.setAdress( professorDto.getAdress() );
        professorEntity.setPhone( professorDto.getPhone() );
        professorEntity.setReelectionDate( professorDto.getReelectionDate() );

        return professorEntity;
    }

    protected CityDto cityEntityToCityDto(CityEntity cityEntity) {
        if ( cityEntity == null ) {
            return null;
        }

        CityDto cityDto = new CityDto();

        cityDto.setNumber( cityEntity.getNumber() );
        cityDto.setName( cityEntity.getName() );

        return cityDto;
    }

    protected TitleDto titleEntityToTitleDto(TitleEntity titleEntity) {
        if ( titleEntity == null ) {
            return null;
        }

        TitleDto titleDto = new TitleDto();

        titleDto.setId( titleEntity.getId() );
        titleDto.setTitleName( titleEntity.getTitleName() );

        return titleDto;
    }

    protected CityEntity cityDtoToCityEntity(CityDto cityDto) {
        if ( cityDto == null ) {
            return null;
        }

        CityEntity cityEntity = new CityEntity();

        cityEntity.setNumber( cityDto.getNumber() );
        cityEntity.setName( cityDto.getName() );

        return cityEntity;
    }

    protected TitleEntity titleDtoToTitleEntity(TitleDto titleDto) {
        if ( titleDto == null ) {
            return null;
        }

        TitleEntity titleEntity = new TitleEntity();

        titleEntity.setId( titleDto.getId() );

        return titleEntity;
    }
}
